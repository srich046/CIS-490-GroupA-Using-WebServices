//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRMWebClient.CRMWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketListing", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class TicketListing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueType {
            get {
                return this.IssueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueTypeField, value) != true)) {
                    this.IssueTypeField = value;
                    this.RaisePropertyChanged("IssueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Serial {
            get {
                return this.SerialField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialField, value) != true)) {
                    this.SerialField = value;
                    this.RaisePropertyChanged("Serial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketID {
            get {
                return this.TicketIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketIDField, value) != true)) {
                    this.TicketIDField = value;
                    this.RaisePropertyChanged("TicketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketDetails", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class TicketDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactMediaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnteredByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueuePositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Appointment {
            get {
                return this.AppointmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentField, value) != true)) {
                    this.AppointmentField = value;
                    this.RaisePropertyChanged("Appointment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToField, value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactMedia {
            get {
                return this.ContactMediaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactMediaField, value) != true)) {
                    this.ContactMediaField = value;
                    this.RaisePropertyChanged("ContactMedia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnteredBy {
            get {
                return this.EnteredByField;
            }
            set {
                if ((object.ReferenceEquals(this.EnteredByField, value) != true)) {
                    this.EnteredByField = value;
                    this.RaisePropertyChanged("EnteredBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueDetails {
            get {
                return this.IssueDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueDetailsField, value) != true)) {
                    this.IssueDetailsField = value;
                    this.RaisePropertyChanged("IssueDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueType {
            get {
                return this.IssueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueTypeField, value) != true)) {
                    this.IssueTypeField = value;
                    this.RaisePropertyChanged("IssueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueuePosition {
            get {
                return this.QueuePositionField;
            }
            set {
                if ((object.ReferenceEquals(this.QueuePositionField, value) != true)) {
                    this.QueuePositionField = value;
                    this.RaisePropertyChanged("QueuePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportedOn {
            get {
                return this.ReportedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportedOnField, value) != true)) {
                    this.ReportedOnField = value;
                    this.RaisePropertyChanged("ReportedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Serial {
            get {
                return this.SerialField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialField, value) != true)) {
                    this.SerialField = value;
                    this.RaisePropertyChanged("Serial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketID {
            get {
                return this.TicketIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketIDField, value) != true)) {
                    this.TicketIDField = value;
                    this.RaisePropertyChanged("TicketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CRMWebService.ICRMWebService")]
    public interface ICRMWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMWebService/searchForTickets", ReplyAction="http://tempuri.org/ICRMWebService/searchForTicketsResponse")]
        CRMWebClient.CRMWebService.TicketListing[] searchForTickets(string constraints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMWebService/searchForTickets", ReplyAction="http://tempuri.org/ICRMWebService/searchForTicketsResponse")]
        System.Threading.Tasks.Task<CRMWebClient.CRMWebService.TicketListing[]> searchForTicketsAsync(string constraints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMWebService/getTicketDetails", ReplyAction="http://tempuri.org/ICRMWebService/getTicketDetailsResponse")]
        CRMWebClient.CRMWebService.TicketDetails getTicketDetails(string ticketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMWebService/getTicketDetails", ReplyAction="http://tempuri.org/ICRMWebService/getTicketDetailsResponse")]
        System.Threading.Tasks.Task<CRMWebClient.CRMWebService.TicketDetails> getTicketDetailsAsync(string ticketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMWebService/createNewTicket", ReplyAction="http://tempuri.org/ICRMWebService/createNewTicketResponse")]
        bool createNewTicket(string ticketInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMWebService/createNewTicket", ReplyAction="http://tempuri.org/ICRMWebService/createNewTicketResponse")]
        System.Threading.Tasks.Task<bool> createNewTicketAsync(string ticketInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMWebService/updateTicket", ReplyAction="http://tempuri.org/ICRMWebService/updateTicketResponse")]
        bool updateTicket(string ticketID, string ticketInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMWebService/updateTicket", ReplyAction="http://tempuri.org/ICRMWebService/updateTicketResponse")]
        System.Threading.Tasks.Task<bool> updateTicketAsync(string ticketID, string ticketInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICRMWebServiceChannel : CRMWebClient.CRMWebService.ICRMWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CRMWebServiceClient : System.ServiceModel.ClientBase<CRMWebClient.CRMWebService.ICRMWebService>, CRMWebClient.CRMWebService.ICRMWebService {
        
        public CRMWebServiceClient() {
        }
        
        public CRMWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CRMWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRMWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRMWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CRMWebClient.CRMWebService.TicketListing[] searchForTickets(string constraints) {
            return base.Channel.searchForTickets(constraints);
        }
        
        public System.Threading.Tasks.Task<CRMWebClient.CRMWebService.TicketListing[]> searchForTicketsAsync(string constraints) {
            return base.Channel.searchForTicketsAsync(constraints);
        }
        
        public CRMWebClient.CRMWebService.TicketDetails getTicketDetails(string ticketID) {
            return base.Channel.getTicketDetails(ticketID);
        }
        
        public System.Threading.Tasks.Task<CRMWebClient.CRMWebService.TicketDetails> getTicketDetailsAsync(string ticketID) {
            return base.Channel.getTicketDetailsAsync(ticketID);
        }
        
        public bool createNewTicket(string ticketInformation) {
            return base.Channel.createNewTicket(ticketInformation);
        }
        
        public System.Threading.Tasks.Task<bool> createNewTicketAsync(string ticketInformation) {
            return base.Channel.createNewTicketAsync(ticketInformation);
        }
        
        public bool updateTicket(string ticketID, string ticketInformation) {
            return base.Channel.updateTicket(ticketID, ticketInformation);
        }
        
        public System.Threading.Tasks.Task<bool> updateTicketAsync(string ticketID, string ticketInformation) {
            return base.Channel.updateTicketAsync(ticketID, ticketInformation);
        }
    }
}
